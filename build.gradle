/*
 * Copyright 2018 Matthew Tamlin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.51'
    classpath files('libs/retrial.jar')
  }
}

plugins {
  id 'java-gradle-plugin'
  id 'com.github.johnrengelman.shadow' version '2.0.2' apply true
}

apply plugin: 'retrial'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

sourceCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
}

apply from: 'dependencies.gradle'
def deps = project.ext.dependencies

dependencies {
  compileOnly gradleApi()

  implementation deps.kotlin.standardLibrary
  implementation deps.kotlin.reflect // Included to resolve build warnings. Not directory used.

  implementation deps.rxJava

  implementation deps.rxKotlin

  implementation deps.gson

  implementation deps.jsr250

  implementation deps.dagger.runtime
  kapt deps.dagger.compiler

  testCompileOnly gradleTestKit()

  testImplementation deps.junit.jupiterApi
  testRuntimeOnly deps.junit.jupiterEngine

  testImplementation deps.junitExtensions

  testImplementation deps.mockito

  testImplementation deps.mockitoKotlin

  testImplementation deps.assertk
}

test {
  useJUnitPlatform()
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

jar {
  baseName 'intermediate'
}

shadowJar{
  archiveName = "retrial.${extension}"
}

task buildRelease(dependsOn: shadowJar) {
  doLast {
    // remove a few troublesome dependencies from the fat jar
    exec { commandLine 'zip', '-d', 'build/libs/retrial.jar', 'org/codehaus/groovy/*' }
    exec { commandLine 'zip', '-d', 'build/libs/retrial.jar', 'org/gradle/*' }
    exec { commandLine 'zip', '-d', 'build/libs/retrial.jar', 'META-INF/services/org.codehaus.*' }
    exec { commandLine 'zip', '-d', 'build/libs/retrial.jar', 'META-INF/services/org.gradle.*' }
    print "Release can be found at build/libs/retrial.jar"
  }
}

// Necessary to ensure the gradle plugin definition is included in the shadow jar
shadowJar.dependsOn(build)

// Runs the dependency check on each build
build.finalizedBy(verifyDependencyChecksums)